package se.seb.green.theme

import androidx.compose.ui.graphics.Color

data class GreenTokenColors(
    val isDark: Boolean,
    val level1Colors: Level1Colors,
    val level2Colors: Level2Colors,
    val level3Colors: Level3Colors,
    val accentAccentGreen: Color,
    val accentAccentOrange: Color,
    val accentOnAccentGreen: Color,
    val accentOnAccentOrange: Color,
    val backgroundBackground: Color,
    val backgroundBackgroundDim: Color,
    val containerContainer: Color,
    val containerContainerBright: Color,
    val containerContainerDim1: Color,
    val containerContainerDim2: Color,
    val containerContainerDisabled: Color,
    val containerContainerNegative: Color,
    val containerContainerNegativeBright: Color,
    val containerContainerPositive: Color,
    val containerContainerShade1: Color,
    val containerContainerShade2: Color,
    val containerContainerShade3: Color,
    val contentContent: Color,
    val contentContentCustomBlueBright: Color,
    val contentContentDisabled: Color,
    val contentContentInverse: Color,
    val contentContentNegative: Color,
    val contentContentNegativeBright: Color,
    val contentContentPositive: Color,
    val contentContentPositiveBright: Color,
    val contentContentSecondary: Color,
    val customCustomBlue: Color,
    val customCustomBlueBright: Color,
    val customCustomGreen: Color,
    val customCustomGreenBright: Color,
    val customCustomGrey: Color,
    val customCustomGreyBright: Color,
    val customOnCustomBlue: Color,
    val customOnCustomBlueBright: Color,
    val customOnCustomGreen: Color,
    val customOnCustomGreenBright: Color,
    val customOnCustomGrey: Color,
    val customOnCustomGreyBright: Color,
    val primaryPrimary: Color,
    val stateLayersStateBlack: Color,
    val stateLayersStateBlackDim1: Color,
    val stateLayersStateBlackDim2: Color,
    val stateLayersStateBlackShade: Color,
    val stateLayersStateCustomBlue: Color,
    val stateLayersStateNegative: Color,
    val stateLayersStateNegativeDim: Color,
    val stateLayersStatePositive: Color,
    val stateLayersStatePositiveDim: Color,
    val statusInformationInformation: Color,
    val statusInformationInformationBright: Color,
    val statusInformationOnInformation: Color,
    val statusInformationOnInformationBright: Color,
    val statusNegativeNegative: Color,
    val statusNegativeNegativeBright: Color,
    val statusNegativeOnNegative: Color,
    val statusNegativeOnNegativeBright: Color,
    val statusNoticeNotice: Color,
    val statusNoticeNoticeBright: Color,
    val statusNoticeOnNotice: Color,
    val statusNoticeOnNoticeBright: Color,
    val statusPositiveOnPositive: Color,
    val statusPositiveOnPositiveBright: Color,
    val statusPositivePositive: Color,
    val statusPositivePositiveBright: Color,
    val statusWarningOnWarning: Color,
    val statusWarningOnWarningBright: Color,
    val statusWarningWarning: Color,
    val statusWarningWarningBright: Color,
    val strokeStroke: Color,
    val strokeStrokeCustomBlue: Color,
    val strokeStrokeCustomBlueBright: Color,
    val strokeStrokeDisabled: Color,
    val strokeStrokeInversed: Color,
    val strokeStrokeNegative: Color,
    val strokeStrokeNotice: Color,
    val strokeStrokePositive: Color,
    val strokeStrokeVariant1: Color,
    val strokeStrokeVariant2: Color,
    val strokeStrokeWarning: Color,
) {
    companion object {
        fun defaultColors(isSystemDarkMode: Boolean): GreenTokenColors {
            return if (isSystemDarkMode) {
                darkColors
            } else {
                lightColors
            }
        }
    }
}

data class Level1Colors(
    val levelL1BackgroundPrimary: Color,
    val levelL1BackgroundSecondary: Color,
    val levelL1BackgroundTertiary: Color,
    val levelL1ContentNegative: Color,
    val levelL1ContentPositive: Color,
    val levelL1ContentPrimary: Color,
    val levelL1ContentSecondary: Color,
    val levelL1ContentTertiary: Color,
)

data class Level2Colors(
    val levelL2BackgroundBlue01: Color,
    val levelL2BackgroundBlue02: Color,
    val levelL2BackgroundCopper01: Color,
    val levelL2BackgroundCopper02: Color,
    val levelL2BackgroundGreen01: Color,
    val levelL2BackgroundGreen02: Color,
    val levelL2BackgroundInformation: Color,
    val levelL2BackgroundNegative: Color,
    val levelL2BackgroundNotice: Color,
    val levelL2BackgroundPositive: Color,
    val levelL2BackgroundPrimary: Color,
    val levelL2BackgroundPurple01: Color,
    val levelL2BackgroundPurple02: Color,
    val levelL2BackgroundSecondary: Color,
    val levelL2BackgroundTertiary: Color,
    val levelL2BackgroundWarning: Color,
    val levelL2BorderInversed: Color,
    val levelL2BorderPrimary: Color,
    val levelL2BorderQuarternary: Color,
    val levelL2BorderSecondary: Color,
    val levelL2BorderTertiary: Color,
    val levelL2ContentBlue01: Color,
    val levelL2ContentBlue02: Color,
    val levelL2ContentCopper01: Color,
    val levelL2ContentCopper02: Color,
    val levelL2ContentGreen01: Color,
    val levelL2ContentGreen02: Color,
    val levelL2ContentInformation: Color,
    val levelL2ContentNegative: Color,
    val levelL2ContentNotice: Color,
    val levelL2ContentPositive: Color,
    val levelL2ContentPrimary: Color,
    val levelL2ContentPurple01: Color,
    val levelL2ContentPurple02: Color,
    val levelL2ContentSecondary: Color,
    val levelL2ContentTertiary: Color,
    val levelL2ContentWarning: Color,
)

data class Level3Colors(
    val levelL3BackgroundBlue01: Color,
    val levelL3BackgroundBlue02: Color,
    val levelL3BackgroundBuy: Color,
    val levelL3BackgroundCopper01: Color,
    val levelL3BackgroundCopper02: Color,
    val levelL3BackgroundDisabled: Color,
    val levelL3BackgroundDisabledSecondary: Color,
    val levelL3BackgroundGreen01: Color,
    val levelL3BackgroundGreen02: Color,
    val levelL3BackgroundInformation: Color,
    val levelL3BackgroundInformationBadge: Color,
    val levelL3BackgroundInformationSecondary: Color,
    val levelL3BackgroundNegative: Color,
    val levelL3BackgroundNegativeBadge: Color,
    val levelL3BackgroundNegativeSecondary: Color,
    val levelL3BackgroundNotice: Color,
    val levelL3BackgroundNoticeBadge: Color,
    val levelL3BackgroundNoticeSecondary: Color,
    val levelL3BackgroundPositive: Color,
    val levelL3BackgroundPositiveBadge: Color,
    val levelL3BackgroundPositiveSecondary: Color,
    val levelL3BackgroundPrimary: Color,
    val levelL3BackgroundPurple01: Color,
    val levelL3BackgroundPurple02: Color,
    val levelL3BackgroundQuarternary: Color,
    val levelL3BackgroundSecondary: Color,
    val levelL3BackgroundTertiary: Color,
    val levelL3BackgroundWarning: Color,
    val levelL3BackgroundWarningBadge: Color,
    val levelL3BackgroundWarningSecondary: Color,
    val levelL3BorderNegative: Color,
    val levelL3BorderPrimary: Color,
    val levelL3BorderSecondary: Color,
    val levelL3BorderTertiary: Color,
    val levelL3ContentBlue01: Color,
    val levelL3ContentBlue02: Color,
    val levelL3ContentBuy: Color,
    val levelL3ContentCopper01: Color,
    val levelL3ContentCopper02: Color,
    val levelL3ContentDisabled: Color,
    val levelL3ContentGreen01: Color,
    val levelL3ContentGreen02: Color,
    val levelL3ContentInformation: Color,
    val levelL3ContentNegative: Color,
    val levelL3ContentNotice: Color,
    val levelL3ContentPositive: Color,
    val levelL3ContentPrimary: Color,
    val levelL3ContentPurple01: Color,
    val levelL3ContentPurple02: Color,
    val levelL3ContentSecondary: Color,
    val levelL3ContentTertiary: Color,
    val levelL3ContentWarning: Color,
    val levelL3StatesDarkHover: Color,
    val levelL3StatesDarkPressed: Color,
    val levelL3StatesLightHover: Color,
    val levelL3StatesLightPressed: Color,
    val levelL3StatesNegativeHover: Color,
    val levelL3StatesNegativePressed: Color,
    val levelL3StatesPositiveHover: Color,
    val levelL3StatesPositivePressed: Color,
)